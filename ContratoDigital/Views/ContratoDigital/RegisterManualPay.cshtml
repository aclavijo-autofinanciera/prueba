@model ContratoDigital.Models.Contrato
@{
    ViewData["Title"] = "Registrar pago manual";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div style="background: url('../../../../images/background/anotherscooter.jpg') no-repeat center center fixed;-webkit-background-size: cover;-moz-background-size: cover;-o-background-size: cover;background-size: cover;min-height: 20rem;">
                    <h1 class="text-white text-center text-shadow" data-aos="fade-in" data-aos-delay="500" style="max-width: 350px;position:absolute;left: 50%;top: 50%;transform: translate(-50%,-50%);">
                        Registro de pagos manuales
                    </h1>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <!-- Begin -->
            <div class="col-12 error-area"></div>
            <div class="col-12 col-md-6">
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-6 font-weight-bold">
                            Nombre
                        </div>
                        <div class="col-12 col-md-6 text-black-65 text-uppercase">
                            @(Model.primer_nombre + " " + Model.segundo_nombre + " " + Model.primer_apellido + " " + Model.segundo_apellido)
                        </div>
                    </div>
                </div>
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-6 font-weight-bold">
                            Documento identidad
                        </div>
                        <div class="col-12 col-md-6 text-black-65 text-uppercase">
                            @(Model.documento_identidad_suscriptor)
                        </div>
                    </div>
                </div>
                <div class="polymer-box">                                                            
                    <div class="isPaid">
                        @if (Model.ConfirmacionContratos.IsPaid)
                        {

                            <label class="text-success"><i class="fas fa-check"></i> Pagado</label>
                        }
                        else
                        {
                            <label class="text-muted"><i class="far fa-clock"></i> Por pagar &nbsp;&nbsp;</label>

                        }
                    </div>
                </div>

            </div>
            <div class="col-12 col-md-6">
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-6 font-weight-bold">
                            Número del contrato
                        </div>
                        <div class="col-12 col-md-6 text-black-65 text-uppercase">
                            @(Model.numero_de_contrato)
                        </div>
                    </div>
                </div>
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-6 font-weight-bold">
                            Monto primera inversión
                        </div>
                        <div class="col-12 col-md-6 text-black-65 text-uppercase">
                            @(String.Format("{0:$ 0,00}", Model.valor_primer_pago))
                        </div>
                    </div>
                </div>
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-6 font-weight-bold">
                            Saldo restante
                        </div>
                        <div class="col-12 col-md-6 text-black-65 text-uppercase">
                            @{
                                double saldo = Model.valor_primer_pago;
                                foreach (var item in Model.Pagos)
                                {
                                    saldo -= item.Monto;
                                }
                                foreach (var item in Model.PagosManuales)
                                {
                                    saldo -= item.Monto;
                                }
                            }
                            @if (saldo > 0)
                            {
                                <label class="text-warning"><i class="far fa-clock"></i> @string.Format("{0:0,0.00}", saldo)</label>
                            }
                            else if (saldo <= 0)
                            {
                                <label class="text-success"><i class="fas fa-check"></i> @string.Format("{0:0,0.00}", saldo)</label>
                            }
                        </div>
                    </div>
                </div>


            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-12">
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-4 font-weight-bold">
                            <label class="text-primary">Recibos emitidos</label>
                        </div>
                        <div class="col-12 col-md-8 text-black-65 text-uppercase">

                            @if (Model.RecibosPago.Count > 0)
                            {
                                <div class="row">
                                    <div class="col-12 col-md-4"><strong>Monto</strong></div>
                                    <div class="col-12 col-md-4"><strong>Fecha emisión</strong></div>
                                    <div class="col-12 col-md-4"><strong>Referencia de pago</strong></div>
                                </div>
                                @foreach (var item in Model.RecibosPago)
                                {
                                    <div class="row">
                                        <div class="col-12 col-md-4">$ @String.Format("{0:0,0.00}", item.Monto)</div>
                                        <div class="col-12 col-md-4">@String.Format("{0:yyyy-MM-dd}", item.FechaEmision)</div>
                                        <div class="col-12 col-md-4">@item.ReferenciaSiicon</div>

                                    </div>
                                }
                            }
                            else
                            {
                                Write("No hay recibos emitidos.");
                            }


                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12">
                <div class="polymer-box">
                    <div class="row">
                        <div class="col-12 col-md-4 font-weight-bold">
                            <label class="text-success">Pagos Recibidos</label>
                        </div>
                        <div class="col-12 col-md-8 text-black-65 text-uppercase">

                            @if (Model.RecibosPago.Count > 0)
                            {
                                @foreach (var item in Model.Pagos)
                                {
                                    <div class="row">
                                        <div class="col-12 col-md-4">$ @String.Format("{0:0,0.00}", item.Monto)</div>
                                        <div class="col-12 col-md-4">@String.Format("{0:yyyy-MM-dd}", item.FechaPago)</div>
                                        <div class="col-12 col-md-4">@item.ReferenciaSiicon</div>

                                    </div>
                                }
                            }
                            else
                            {
                                Write("No hay pagos recibidos.");
                            }


                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12">
                <div class="polymer-box">
                    <h4>Pagos registrados manualmente</h4>
                    @if (Model.PagosManuales.Count > 0)
                    {


                        @foreach (var item in Model.PagosManuales)
                        {
                            <div class="card">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-12 col-md-3">
                                            <strong>Tipo de pago</strong><br />
                                            @item.TipoPago
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Monto</strong><br />
                                            @String.Format("{0:$ 0,00}", item.Monto)
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Cuenta bancaria</strong><br />
                                            @item.CuentaBancaria
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Referencia / Autorización</strong><br />
                                            @item.Referencia
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Fecha pago</strong><br />
                                            @String.Format("{0:yyyy-MM-dd}", item.FechaPago)
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Número</strong><br />
                                            @item.Numero
                                        </div>
                                        <div class="col-12 col-md-3">
                                            <strong>Concesionario</strong><br />
                                            @item.Concesionario
                                        </div>
                                    </div>
                                </div>
                            </div>


                        }

                    }
                    else
                    {
                        <div class="polymer-box">
                            No hay pagos manuales registrados.
                        </div>
                    }

                </div>
            </div>

        </div>


        <div class="row justify-content-center">
            <div class="col-12 ">
                <div class="polymer-box">
                    <h3 class="text-center">Datos de registro</h3>
                </div>
            </div>
            <div class="col-12">
                <form method="post" class="PagoManualValidation bootstrapValidation" autocomplete="off">
                    <input type="hidden" name="compania" id="compania" value="@Model.id_compania" />
                    <input type="hidden" name="id_contrato" id="id_contrato" value="@Model.IdContrato" />

                    <div class="form-row mt-4">
                        <div class="col-12 col-md-6">
                            <label for="id_tipo_pago">Tipo de pago</label>
                            <select name="id_tipo_pago" id="id_tipo_pago" class="form-control form-control-lg text-uppercase" autocomplete="off" required>
                                <option value="">Seleccione un tipo</option>
                            </select>
                            <input type="hidden" name="tipo_pago" id="tipo_pago" />
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="fecha_pago">Fecha de pago</label>
                            <input type="text" name="fecha_pago" id="fecha_pago" class="form-control form-control-lg text-uppercase" autocomplete="off" required />
                        </div>
                    </div>

                    <div class="form-row mt-4">
                        <div class="col-12 col-md-6">
                            <label for="monto_efectivo">Monto efectivo</label>
                            <input type="text" name="monto_efectivo" id="monto_efectivo" class="form-control form-control-lg text-uppercase" autocomplete="off" required />
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="id_cuenta_bancaria">Cuenta bancaria</label>
                            <select name="id_cuenta_bancaria" id="id_cuenta_bancaria" class="form-control form-control-lg text-uppercase" autocomplete="off" required>
                                <option value="">Seleccione un tipo</option>
                            </select>
                            <input type="hidden" name="cuenta_bancaria" id="cuenta_bancaria" />
                        </div>
                    </div>

                    <div class="form-row mt-4">
                        <div class="col-12 col-md-6">
                            <label for="numero">Número</label>
                            <input type="text" name="numero" id="numero" class="form-control form-control-lg text-uppercase" autocomplete="off" required />
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="referencia">Referencia / Autorización</label>
                            <input type="text" name="referencia" id="referencia" class="form-control form-control-lg text-uppercase" autocomplete="off" required />
                        </div>
                    </div>

                    <div class="form-row mt-4">
                        <div class="col-12 col-md-6">
                            <label for="id_concesionario">Concesionario</label>
                            <select id="id_concesionario" name="id_concesionario" class="form-control form-control-lg text-uppercase" autocomplete="off" required>
                                <option value="">Seleccione un tipo</option>
                            </select>
                            <input type="hidden" name="concesionario" id="concesionario" />
                        </div>
                    </div>

                    <div class="form-row mt-4">
                        <a class="btn btn-lg btn-outline-primary mx-auto" href="@Url.Action("Details", "ContratoDigital", new {id = Model.IdContrato})"><i class="far fa-arrow-alt-circle-left"></i> Regresar</a>
                        @if (Model.ConfirmacionContratos.IsPaid == false)
                        {
                            <input type="submit" class="btn btn-azul btn-lg mx-auto submitbutton" value="Registrar" />
                        }

                    </div>
                </form>
            </div>

        </div>


    </div>
    
</section>

@section Scripts
{
    <script>
        jQuery(function ($) {
            var id_tipo_pago = $('#id_tipo_pago');
            var id_cuenta_bancaria = $('#id_cuenta_bancaria');
            var id_concesionario = $('#id_concesionario');

            $.ajax({
                type: "GET",
                url: "/api/Freyja/GetTiposPagos",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    try {
                        
                        id_tipo_pago.empty();
                        id_tipo_pago.append("<option value=\"\">Selecciona una opción</option>"); //<option value=\"todos\">Seleccionar todos</option>");
                        $.each(data, function (i, item) {
                            var rows = "<option value=\"" + item.TipoPagoId + "\" data-tipopagocompleto=\"" + item.TipoPagoCompleto + "\" >" + item.TipoPago + " </option>";
                            id_tipo_pago.append(rows);
                        });
                        id_tipo_pago.removeAttr("readonly disabled");
                    } catch (e) {
                        $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                            '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                            '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                            '<span aria-hidden="true">&times;</span>' +
                            '</button>' +
                            '</div >');
                        $(this).addClass('fa-spin');
                    }
                },
                failure: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                },
                error: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                }
            });


            $.ajax({
                type: "GET",
                url: "/api/Freyja/GetCuentasBancarias/" + $('#compania').val(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    try {
                        
                        id_cuenta_bancaria.empty();
                        id_cuenta_bancaria.append("<option value=\"\">Selecciona una opción</option>"); //<option value=\"todos\">Seleccionar todos</option>");
                        $.each(data, function (i, item) {
                            var rows = "<option value=\"" + item.CodCuentaBancaria + "\">" + item.CuentaBancaria + " </option>";
                            id_cuenta_bancaria.append(rows);
                        });
                        id_cuenta_bancaria.removeAttr("readonly disabled");
                    } catch (e) {
                        $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                            '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                            '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                            '<span aria-hidden="true">&times;</span>' +
                            '</button>' +
                            '</div >');
                        $(this).addClass('fa-spin');
                    }
                },
                failure: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                },
                error: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                }
            });


            $.ajax({
                type: "GET",
                url: "/api/Freyja/GetConcesionarios/"+$('#compania').val(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    try {
                        
                        id_concesionario.empty();
                        id_concesionario.append("<option value=\"\">Selecciona una opción</option>"); //<option value=\"todos\">Seleccionar todos</option>");
                        $.each(data, function (i, item) {
                            var rows = "<option value=\"" + item.CodConcesionario + "\" >" + item.Concesionario + " </option>";
                            id_concesionario.append(rows);
                        });
                        id_concesionario.removeAttr("readonly disabled");
                    } catch (e) {
                        $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                            '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                            '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                            '<span aria-hidden="true">&times;</span>' +
                            '</button>' +
                            '</div >');
                        $(this).addClass('fa-spin');
                    }
                },
                failure: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                },
                error: function (data) {
                    $('.error-area').html('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        '<strong>¡Ha Ocurrido un error! Inténtelo nuevamente</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div >');
                    $(this).removeClass('fa-spin');
                }
            });

            id_tipo_pago.on('change', function () {
                $("#tipo_pago").val($(this).find(":selected").text());
            });
            id_cuenta_bancaria.on('change', function () {
                $("#cuenta_bancaria").val($(this).find(":selected").text());
            });
            id_concesionario.on('change', function () {
                $("#concesionario").val($(this).find(":selected").text());
            });


        });
        
    </script>
}

